# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureKeyVault@2
      inputs:
        azureSubscription: 'sub(e30a0d61-0b46-44af-9f13-6251f999063e)'
        KeyVaultName: 'secrets-new'
        SecretsFilter: '*'
        RunAsPreJob: false
    - task: CmdLine@2
      inputs:
        script: sed -i -e 's/replaceNuclearCodes/$(nuclearcodes)/g' $(Build.SourcesDirectory)/src/dockerfile
    - task: CmdLine@2
      inputs:
        script: sed -i -e 's/replaceApikey/$(apikey)/g' $(Build.SourcesDirectory)/src/dockerfile
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/src/dockerfile'
        tags: |
          $(tag)
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          git checkout $(Build.master)
          git remote add heroku https://heroku:$(herokuapi)@git.heroku.com/test_app.git
          git push heroku $(Build.master)


      
    - task: CmdLine@2
      inputs:
        script: 'echo $(Your-Secret-Name) > secret.txt'

    - task: CopyFiles@2
      inputs:
        Contents: secret.txt
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Using the mapped env var for this task works and is recommended: $env:MY_MAPPED_ENV_VAR"
      env:
        REACT_APP_NUCLEAR_CODES: $(nuclearcodes) # the recommended way to map to an env variable
        REACT_APP_API_KEY: $(apikey) # the recommended way to map to an env variable
    - task: CmdLine@2
      inputs:
        script: cat $(Build.SourcesDirectory)/src/dockerfile |  sed 's/./& /g'
        